<?xml version="1.0" encoding="UTF-8"?>
<!--
	Licensed to the Apache Software Foundation (ASF) under one
	or more contributor license agreements. See the NOTICE file
	distributed with this work for additional information
	regarding copyright ownership. The ASF licenses this file
	to you under the Apache License, Version 2.0 (the
	"License"); you may not use this file except in compliance
	with the License. You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing,
	software distributed under the License is distributed on an
	"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, either express or implied. See the License for the
	specific language governing permissions and limitations
	under the License.
-->
<!-- START SNIPPET: beans -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd

       http://cxf.apache.org/jaxws
       http://cxf.apache.org/schemas/jaxws.xsd

       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
       default-autowire="byName">

  <aop:aspectj-autoproxy/>

  <context:annotation-config/>
  <context:mbean-export/>
  <tx:annotation-driven/>

  <import resource="classpath:META-INF/cxf/cxf.xml"/>
  <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

  <context:component-scan base-package="se.su.it.svc"/>

  <bean id="configManager" class="se.su.it.svc.manager.ConfigManager" scope="singleton" lazy-init="false"/>

  <bean id="gldapoManager" class="se.su.it.svc.manager.GldapoManager" scope="singleton">
    <constructor-arg ref="configManager"/>
  </bean>

  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="properties" value="#{ configManager.properties }"/>
    <property name="ignoreUnresolvablePlaceholders" value="true"/>
  </bean>

  <bean id="suCardDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" lazy-init="false">
    <property name="driverClassName" value="${sucard.database.driver}"/>
    <property name="url" value="${sucard.database.url}"/>
    <property name="username" value="${sucard.database.user}"/>
    <property name="password" value="${sucard.database.password}"/>
    <property name="validationQuery" value="SELECT 1"/>
    <property name="minIdle" value="1"/>
    <property name="testWhileIdle" value="true"/>
    <property name="timeBetweenEvictionRunsMillis" value="1800000"/>
  </bean>

  <bean id="suCardSql" class="groovy.sql.Sql" destroy-method="close" lazy-init="false">
    <constructor-arg ref="suCardDataSource" />
  </bean>

  <bean id="applicationContextProvider" class="se.su.it.svc.manager.ApplicationContextProvider"/>

  <bean id="suCardOrderQuery" class="se.su.it.svc.query.SuCardOrderQuery">
    <property name="suCardSql" ref="suCardSql"/>
  </bean>

  <bean id="cardinfoserviceEndpoint" class="se.su.it.svc.CardInfoServiceImpl"/>

  <jaxws:endpoint
          id="cardinfoservice"
          implementorClass="se.su.it.svc.CardInfoServiceImpl"
          implementor="#cardinfoserviceEndpoint"
          address="/CardInfoService"
          publishedEndpointUrl="${soap.publishedEndpointUrl}/CardInfoService"/>

  <bean id="cardorderserviceEndpoint" class="se.su.it.svc.CardOrderServiceImpl"/>
  <jaxws:endpoint
          id="cardorderservice"
          implementorClass="se.su.it.svc.CardOrderServiceImpl"
          implementor="#cardorderserviceEndpoint"
          address="/CardOrderService"
          publishedEndpointUrl="${soap.publishedEndpointUrl}/CardOrderService"/>

  <bean id="cardadminserviceEndpoint" class="se.su.it.svc.CardAdminServiceImpl"/>
  <jaxws:endpoint
          id="cardadminservice"
          implementorClass="se.su.it.svc.CardAdminServiceImpl"
          implementor="#cardadminserviceEndpoint"
          address="/CardAdminService"
          publishedEndpointUrl="${soap.publishedEndpointUrl}/CardAdminService"/>

  <bean id="entitlementserviceEndpoint" class="se.su.it.svc.EntitlementServiceImpl"/>
  <jaxws:endpoint
          id="entitlementservice"
          implementorClass="se.su.it.svc.EntitlementServiceImpl"
          implementor="#entitlementserviceEndpoint"
          address="/EntitlementService"
          publishedEndpointUrl="${soap.publishedEndpointUrl}/EntitlementService"/>

  <bean id="serviceserviceEndpoint" class="se.su.it.svc.ServiceServiceImpl"/>
  <jaxws:endpoint
          id="serviceservice"
          implementorClass="se.su.it.svc.ServiceServiceImpl"
          implementor="#serviceserviceEndpoint"
          address="/ServiceService"
          publishedEndpointUrl="${soap.publishedEndpointUrl}/ServiceService"/>

  <bean id="accountserviceEndpoint" class="se.su.it.svc.AccountServiceImpl"/>
  <jaxws:endpoint
          id="accountservice"
          implementorClass="se.su.it.svc.AccountServiceImpl"
          implementor="#accountserviceEndpoint"
          address="/AccountService"
          publishedEndpointUrl="${soap.publishedEndpointUrl}/AccountService"/>

  <bean id="roleserviceEndpoint" class="se.su.it.svc.RoleServiceImpl"/>
  <jaxws:endpoint
          id="roleservice"
          implementorClass="se.su.it.svc.RoleServiceImpl"
          implementor="#roleserviceEndpoint"
          address="/RoleService"
          publishedEndpointUrl="${soap.publishedEndpointUrl}/RoleService"/>

  <bean id="webserviceadminEndpoint" class="se.su.it.svc.WebServiceAdminImpl"/>
  <jaxws:endpoint
          id="webserviceadmin"
          implementorClass="se.su.it.svc.WebServiceAdminImpl"
          implementor="#webserviceadminEndpoint"
          address="/WebServiceAdmin"
          publishedEndpointUrl="${soap.publishedEndpointUrl}/WebServiceAdmin"/>

  <jaxws:endpoint
          id="status"
          implementor="se.su.it.svc.Status"
          address="/Status"
          publishedEndpointUrl="${soap.publishedEndpointUrl}/Status"/>

  <bean id="sanitizerAspect" class="se.su.it.svc.server.aspect.SanitizeWebParametersAspect"/>

  <bean id="auditAspect" class="se.su.it.svc.server.aspect.AuditAspect"/>

  <bean id="spocpConnectionFactory" class="org.spocp.client.SPOCPConnectionFactoryImpl">
    <property name="server" value="${spocp.server}"/>
    <property name="port" value="${spocp.port}"/>
  </bean>

  <bean id="spocpRoleAuthorizor" class="se.su.it.svc.server.security.SpocpRoleAuthorizor">
    <property name="spocpConnectionFactory" ref="spocpConnectionFactory"/>
  </bean>

  <bean id="defaultAuthorizor" class="se.su.it.svc.server.security.DefaultAuthorizor"/>

  <bean id="spocpAspect" class="se.su.it.svc.server.aspect.AuthorizorAspect">
    <property name="authorizor" ref="${authorizor.bean}"/>
  </bean>

</beans>
